on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Release

jobs:
  build:
    name: Build Release
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Build Frontend
        uses: actions/setup-node@v1
        run: |
          cd frontend
          npm install
          npm run build
      - name: Build Backend
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pyinstaller --name=Stellaru --exclude-module tkinter --noconfirm main.py
      - name: Package Project
        run: |
          cd backend
          python manage.py collectstatic
          mv static dist/Stellaru
          cd dist
          zip -r Stellaru.zip Stellaru
          mv Stellaru.zip ../../
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Package
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Stellaru.zip
          asset_name: Stellaru.zip
          asset_content_type: application/zip
