on:
  repository_dispatch:
    types: [builds]

name: Build Binaries

jobs:
  windows_build:
    name: Windows Build
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      - name: Build Backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install setuptools==60.6.0
          pip install -r requirements.txt
          pyinstaller --name=Stellaru --exclude-module tkinter --noconfirm --icon=./data/icon.ico main.py
      - name: Package Project
        run: |
          cd backend
          python manage.py collectstatic
          mv static dist/Stellaru
          mv resources dist/Stellaru
          cd dist
          Compress-Archive -Path Stellaru -DestinationPath Windows.zip
          mv Windows.zip ../../
      - name: Upload Package
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.client_payload.release_url }}
          asset_path: ./Windows.zip
          asset_name: Windows.zip
          asset_content_type: application/zip

  osx_build:
    name: OS X Build
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      - name: Build Backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pyinstaller --name=Stellaru --exclude-module tkinter --noconfirm main.py
      - name: Package Project
        run: |
          cd backend
          python manage.py collectstatic
          mv static dist/Stellaru
          mv resources dist/Stellaru
          mkdir Stellaru.app
          mkdir Stellaru.app/Contents
          mkdir Stellaru.app/Contents/Resources
          mkdir Stellaru.app/Contents/MacOS
          cp data/Info.plist Stellaru.app/Contents
          cp data/stellaru.icns Stellaru.app/Contents/Resources
          cp -R dist/Stellaru/* Stellaru.app/Contents/MacOS
          zip -vr MacOS.zip Stellaru.app
          mv MacOS.zip ../
      - name: Upload Package
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.client_payload.release_url }}
          asset_path: ./MacOS.zip
          asset_name: MacOS.zip
          asset_content_type: application/zip

  linux_build:
    name: Linux Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
      - name: Build Backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pyinstaller --name=Stellaru --exclude-module tkinter --noconfirm --icon=./data/icon.ico main.py
      - name: Package Project
        run: |
          cd backend
          python manage.py collectstatic
          mv static dist/Stellaru
          mv resources dist/Stellaru
          cd dist
          zip -r Linux.zip Stellaru
          mv Linux.zip ../../
      - name: Upload Package
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.client_payload.release_url }}
          asset_path: ./Linux.zip
          asset_name: Linux.zip
          asset_content_type: application/zip
